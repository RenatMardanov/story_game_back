name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Create .env file (main)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          echo "PORT=${{ secrets.PORT }}" >> .env

      - name: Create .env file (dev)
        if: github.ref == 'refs/heads/dev'
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          echo "PORT=${{ secrets.PORT }}" >> .env

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Docker image (prod)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/RenatMardanov/story_game_back/backend-prod
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push Docker image (dev)
        if: github.ref == 'refs/heads/dev'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/RenatMardanov/story_game_back/backend-dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy to server (prod)
        if: github.ref == 'refs/heads/main'
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          GHCR_PAT: ${{ secrets.GHCR_PAT }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
            echo $GHCR_PAT | docker login ghcr.io -u RenatMardanov --password-stdin &&
            cd /home/$SSH_USER/app/backend/prod &&
            docker compose down &&
            docker pull ghcr.io/RenatMardanov/story_game_back/backend-prod:latest &&
            docker compose up -d"

      - name: Deploy to server (dev)
        if: github.ref == 'refs/heads/dev'
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          GHCR_PAT: ${{ secrets.GHCR_PAT }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
            echo $GHCR_PAT | docker login ghcr.io -u RenatMardanov --password-stdin &&
            cd /home/$SSH_USER/app/backend/dev &&
            docker compose down &&
            docker pull ghcr.io/RenatMardanov/story_game_back/backend-dev:latest &&
            docker compose up -d"

      - name: Clear docker
        run: |
          docker container prune &&
          docker image prune &&
          docker ps -aq | xargs docker rm -f &&
          docker images -q | xargs docker rmi
